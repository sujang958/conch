type User {
  id: String!
  name: String
  picture: String!
  bio: String!
  bulletElo: Int!
  blitzElo: Int!
  rapidElo: Int!
  createdAt: String!
  whiteGames: [GameWithoutPlayers]!
  blackGames: [GameWithoutPlayers]!
  wonGames: [GameWithoutPlayers]!
}

type UserWithoutGames {
  id: String!
  name: String
  picture: String!
  bio: String!
  bulletElo: Int!
  blitzElo: Int!
  rapidElo: Int!
  createdAt: String!
}

type Game {
  id: String!
  pgn: String!
  reason: String!
  time: Int!
  increment: Int!
  endedAt: Int!
  createdAt: String!

  white: UserWithoutGames!
  black: UserWithoutGames!
  whiteId: String!
  blackId: String!

  winner: UserWithoutGames
  winnerId: String
}

type GameWithoutPlayers {
  id: String!
  pgn: String!
  reason: String!
  time: Int!
  increment: Int!
  endedAt: String!
  createdAt: String!

  whiteId: String!
  blackId: String!
  winnerId: String
}

type Games {
  wonGames: [Game]!
  whiteGames: [Game]!
  blackGames: [Game]!
}

type Query {
  user(id: String!): User
  games(userId: String!): Games
  me: User
}

type Mutation {
  login(idToken: String!): User
  logout: Boolean
  changeName(name: String!): User
  changeBio(bio: String!): User
}
